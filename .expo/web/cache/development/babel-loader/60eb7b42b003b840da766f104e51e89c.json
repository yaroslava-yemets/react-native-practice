{"ast":null,"code":"import { useEffect } from \"react\";\nimport { useSingleSelectListState } from \"@react-stately/list\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nexport function useTabListState(props) {\n  var state = useSingleSelectListState(_babelRuntimeHelpersEsmExtends({}, props, {\n    suppressTextValueWarning: true\n  }));\n  useEffect(function () {\n    var selectedKey = state.selectedKey;\n\n    if (state.selectionManager.isEmpty || !state.collection.getItem(selectedKey)) {\n      selectedKey = state.collection.getFirstKey();\n      state.selectionManager.replaceSelection(selectedKey);\n    }\n\n    if (state.selectionManager.focusedKey == null) {\n      state.selectionManager.setFocusedKey(selectedKey);\n    }\n  }, [state.selectionManager, state.selectedKey, state.collection]);\n  return state;\n}","map":{"version":3,"sources":["packages/@react-stately/tabs/src/useTabListState.ts"],"names":["state","useSingleSelectListState","suppressTextValueWarning","useEffect","selectedKey"],"mappings":";;;OAuBO,SAAA,eAAA,CAAA,KAAA,EAAoF;AACzF,MAAIA,KAAK,GAAGC,wBAAwB,CAAA,8BAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAElCC,IAAAA,wBAAwB,EAAE;AAFQ,GAAA,CAAA,CAApC;AAKAC,EAAAA,SAAS,CAAC,YAAM;AAEd,QAAIC,WAAW,GAAGJ,KAAK,CAAvB,WAAA;;AACA,QAAIA,KAAK,CAALA,gBAAAA,CAAAA,OAAAA,IAAkC,CAACA,KAAK,CAALA,UAAAA,CAAAA,OAAAA,CAAvC,WAAuCA,CAAvC,EAA8E;AAC5EI,MAAAA,WAAW,GAAGJ,KAAK,CAALA,UAAAA,CAAdI,WAAcJ,EAAdI;AACAJ,MAAAA,KAAK,CAALA,gBAAAA,CAAAA,gBAAAA,CAAAA,WAAAA;AACD;;AAED,QAAIA,KAAK,CAALA,gBAAAA,CAAAA,UAAAA,IAAJ,IAAA,EAA+C;AAC7CA,MAAAA,KAAK,CAALA,gBAAAA,CAAAA,aAAAA,CAAAA,WAAAA;AACD;AAVM,GAAA,EAWN,CAACA,KAAK,CAAN,gBAAA,EAAyBA,KAAK,CAA9B,WAAA,EAA4CA,KAAK,CAXpDG,UAWG,CAXM,CAATA;AAaA,SAAA,KAAA;AACD","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {SingleSelectListState, useSingleSelectListState} from '@react-stately/list';\nimport {TabListProps} from '@react-types/tabs';\nimport {useEffect} from 'react';\n\n\nexport interface TabListState<T> extends SingleSelectListState<T> {}\n\n/**\n * Provides state management for a Tabs component. Tabs include a TabList which tracks\n * which tab is currently selected and displays the content associated with that Tab in a TabPanel.\n */\nexport function useTabListState<T extends object>(props: TabListProps<T>): TabListState<T> {\n  let state = useSingleSelectListState<T>({\n    ...props,\n    suppressTextValueWarning: true\n  });\n\n  useEffect(() => {\n    // Ensure a tab is always selected (in case no selected key was specified or if selected item was deleted from collection)\n    let selectedKey = state.selectedKey;\n    if (state.selectionManager.isEmpty || !state.collection.getItem(selectedKey)) {\n      selectedKey = state.collection.getFirstKey();\n      state.selectionManager.replaceSelection(selectedKey);\n    }\n\n    if (state.selectionManager.focusedKey == null) {\n      state.selectionManager.setFocusedKey(selectedKey);\n    }\n  }, [state.selectionManager, state.selectedKey, state.collection]);\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}