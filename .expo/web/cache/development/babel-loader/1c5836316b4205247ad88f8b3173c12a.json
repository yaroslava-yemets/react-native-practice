{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { Box, Heading, Center, Input, IconButton, HStack } from 'native-base';\nimport AddButton from \"./AddButton\";\nimport TaskInput from \"./TaskInput\";\nexport default function AddTaskBox() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var handleInput = function handleInput(e) {\n    setInputValue(e);\n    getInput(inputValue);\n  };\n\n  return React.createElement(Box, {\n    width: \"100%\"\n  }, React.createElement(Center, {\n    flex: 1,\n    px: \"3\"\n  }, React.createElement(Heading, {\n    mb: \"7\"\n  }, \"To do List\"), React.createElement(HStack, {\n    space: 3\n  }, React.createElement(Input, {\n    flex: 2,\n    onChangeText: function onChangeText(v) {\n      return setInputValue(v);\n    },\n    value: inputValue,\n    placeholder: \"Add Task\"\n  }), React.createElement(IconButton, {\n    icon: React.createElement(Icon, {\n      as: Entypo,\n      name: \"emoji-happy\"\n    }),\n    borderRadius: \"full\",\n    _icon: {\n      color: \"orange.500\",\n      size: \"md\"\n    },\n    _hover: {\n      bg: \"orange.600:alpha.20\"\n    },\n    _pressed: {\n      bg: \"orange.600:alpha.20\",\n      _icon: {\n        name: \"emoji-flirt\"\n      },\n      _ios: {\n        _icon: {\n          size: \"2xl\"\n        }\n      }\n    },\n    _ios: {\n      _icon: {\n        size: \"2xl\"\n      }\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/yaroslava/Documents/code/react-native-practice/components/AddTaskBox.jsx"],"names":["React","useState","Box","Heading","Center","Input","IconButton","HStack","AddButton","TaskInput","AddTaskBox","inputValue","setInputValue","handleInput","e","getInput","v","Entypo","color","size","bg","_icon","name","_ios"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsCC,UAAtC,EAAkDC,MAAlD,QAAgE,aAAhE;AAEA,OAAOC,SAAP;AACA,OAAOC,SAAP;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,kBAAoCT,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOU,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AACzBF,IAAAA,aAAa,CAACE,CAAD,CAAb;AACAC,IAAAA,QAAQ,CAACJ,UAAD,CAAR;AACD,GAHD;;AAIE,SACA,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC;AAAX,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAd;AAAiB,IAAA,EAAE,EAAC;AAApB,KACE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC;AAAZ,kBADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAf,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,YAAY,EAAE,sBAACK,CAAD;AAAA,aAAOJ,aAAa,CAACI,CAAD,CAApB;AAAA,KAFhB;AAGE,IAAA,KAAK,EAAEL,UAHT;AAIE,IAAA,WAAW,EAAC;AAJd,IADF,EAOE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEM,MAAV;AAAkB,MAAA,IAAI,EAAC;AAAvB,MADR;AAEE,IAAA,YAAY,EAAC,MAFf;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,YADF;AAELC,MAAAA,IAAI,EAAE;AAFD,KAHT;AAOE,IAAA,MAAM,EAAE;AACNC,MAAAA,EAAE,EAAE;AADE,KAPV;AAUE,IAAA,QAAQ,EAAE;AACRA,MAAAA,EAAE,EAAE,qBADI;AAERC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD,OAFC;AAKRC,MAAAA,IAAI,EAAE;AACJF,QAAAA,KAAK,EAAE;AACLF,UAAAA,IAAI,EAAE;AADD;AADH;AALE,KAVZ;AAqBE,IAAA,IAAI,EAAE;AACJE,MAAAA,KAAK,EAAE;AACLF,QAAAA,IAAI,EAAE;AADD;AADH;AArBR,IAPF,CAFF,CADF,CADA;AA2CH","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { Box, Heading, Center, Input, IconButton, HStack } from 'native-base';\n\nimport AddButton from './AddButton';\nimport TaskInput from './TaskInput';\n\nexport default function AddTaskBox() {\n  const [inputValue, setInputValue] = useState(\"\")\n\n  const handleInput = (e) => {\n    setInputValue(e);\n    getInput(inputValue);\n  }\n    return (\n    <Box width=\"100%\">\n      <Center flex={1} px=\"3\">\n        <Heading mb=\"7\">To do List</Heading>\n        <HStack space={3}>\n          <Input \n            flex={2}\n            onChangeText={(v) => setInputValue(v)}\n            value={inputValue}\n            placeholder=\"Add Task\"\n          />\n          <IconButton\n            icon={<Icon as={Entypo} name=\"emoji-happy\" />}\n            borderRadius=\"full\"\n            _icon={{\n              color: \"orange.500\",\n              size: \"md\",\n            }}\n            _hover={{\n              bg: \"orange.600:alpha.20\",\n            }}\n            _pressed={{\n              bg: \"orange.600:alpha.20\",\n              _icon: {\n                name: \"emoji-flirt\",\n              },\n              _ios: {\n                _icon: {\n                  size: \"2xl\",\n                },\n              },\n            }}\n            _ios={{\n              _icon: {\n                size: \"2xl\",\n              },\n            }}\n          />\n        </HStack>\n        \n      </Center>\n    </Box>\n    );\n}"]},"metadata":{},"sourceType":"module"}