{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useTheme = useTheme;\n\nvar _NativeBaseContext = require(\"./../core/NativeBaseContext\");\n\nfunction useTheme() {\n  var theme = (0, _NativeBaseContext.useNativeBaseConfig)('useTheme').theme;\n\n  if (!theme) {\n    throw Error('useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<NativeBaseProvider />`');\n  }\n\n  return theme;\n}","map":{"version":3,"sources":["useTheme.ts"],"names":["theme","Error"],"mappings":";;;;;AAAA,IAAA,kBAAA,GAAA,OAAA,+BAAA;;AAEO,SAAA,QAAA,GAAoB;AACzB,MAAMA,KAAK,GAAG,CAAA,GAAA,kBAAA,CAAA,mBAAA,EAAA,UAAA,EAAd,KAAA;;AACA,MAAI,CAAJ,KAAA,EAAY;AACV,UAAMC,KAAK,CAAX,+FAAW,CAAX;AAKF;;AAAA,SAAA,KAAA;AACD","sourcesContent":["import { useNativeBaseConfig } from './../core/NativeBaseContext';\n\nexport function useTheme() {\n  const theme = useNativeBaseConfig('useTheme').theme;\n  if (!theme) {\n    throw Error(\n      'useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<NativeBaseProvider />`'\n    );\n  }\n\n  return theme;\n}\n"]},"metadata":{},"sourceType":"script"}